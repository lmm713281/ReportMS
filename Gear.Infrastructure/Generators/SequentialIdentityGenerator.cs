using System;

namespace Gear.Infrastructure.Generators
{
    /// <summary>
    /// 表示队列身份生成器
    /// </summary>
    public class SequentialIdentityGenerator : IIdentityGenerator, ISequenceGenerator
    {
        private static Guid NewSequentialGuid()
        {
            var uid = Guid.NewGuid().ToByteArray();
            var binDate = BitConverter.GetBytes(DateTime.UtcNow.Ticks);

            var secuentialGuid = new byte[uid.Length];

            secuentialGuid[0] = uid[0];
            secuentialGuid[1] = uid[1];
            secuentialGuid[2] = uid[2];
            secuentialGuid[3] = uid[3];
            secuentialGuid[4] = uid[4];
            secuentialGuid[5] = uid[5];
            secuentialGuid[6] = uid[6];
            // set the first part of the 8th byte to '1100' so     
            // later we'll be able to validate it was generated by us   

            secuentialGuid[7] = (byte) (0xc0 | (0xf & uid[7]));

            // the last 8 bytes are sequential,    
            // it minimizes index fragmentation   
            // to a degree as long as there are not a large    
            // number of Secuential-Guids generated per millisecond  

            secuentialGuid[9] = binDate[0];
            secuentialGuid[8] = binDate[1];
            secuentialGuid[15] = binDate[2];
            secuentialGuid[14] = binDate[3];
            secuentialGuid[13] = binDate[4];
            secuentialGuid[12] = binDate[5];
            secuentialGuid[11] = binDate[6];
            secuentialGuid[10] = binDate[7];

            return new Guid(secuentialGuid);
        }

        #region IIdentityGenerator Members

        /// <summary>
        /// 生成身份标识
        /// </summary>
        /// <returns></returns>
        public object Generate()
        {
            return NewSequentialGuid();
        }

        #endregion

        #region ISequenceGenerator Members

        /// <summary>
        /// 获取下一个队列
        /// </summary>
        public object Next
        {
            get { return Generate(); }
        }

        #endregion
    }
}
