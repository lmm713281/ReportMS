@{
    ViewBag.Title = "Report";
}

@section scripts
{
    @Scripts.Render("~/bundles/report")
    <script>
        $(document).on("click", "div[data-field=true] [data-field-target]", function(e) {
            var transfer = new ReportTransfer(this, "#reportcondition");
            transfer.generate();
        });

        $(document).on("click", "[data-condition=true] [data-condition-del=true]", function(e) {
            var transfer = new ReportTransfer();
            transfer.delete(this);
        });

        function doExportExcel(element) {
            var executeUrl = $(element).attr("data-download-url");
            var download = new ReportDownload(executeUrl);
            return download.downLoad();
        }

        function doSubscribe(element) {
            var executeUrl = $(element).attr("data-subscribe-url");
            var subscriber = new Subscriber(executeUrl);
            return subscriber.Subscribe();
        }

        //
        function search() {
            showTable();
        }

        function showTable() {
            var report = new ReportTable("#report_table");
            report.showTable("@Url.Action("GetDataSet")", 256);
        }

        // subscribe
        $(document).on("change", "select[data-schedule=true]", function(e) {
            var url = $(this).attr("data-href");
            var val = $(this).val();
            var $content = $("div[data-schedule-content=true]");
            if (val === "") {
                $content.children().remove();
                return false;
            }

            $content.load(url, { schedule: val });
            return true;
        });

        function subscribeSuccess(data) {
            if (data.status === "success") {
                alert("Subscribe successfully.");
            } else {
                alert("Subscribe failure.");
            }
        }

        // Browser
        var Browser;
        (function() {
            var isIE = function(ver) {
                var b = document.createElement('b');
                b.innerHTML = '<!--[if IE ' + ver + ']><i></i><![endif]-->';
                return b.getElementsByTagName('i').length === 1;
            }
            Browser.isIE = function() {
                return isIE();
            }
            Browser.ieVersion = function() {
                if (!isIE)
                    return 0;

                if (isIE(6))
                    return 6;
                if (isIE(7))
                    return 7;
                if (isIE(8))
                    return 8;
                if (isIE(9))
                    return 9;
                if (isIE(10))
                    return 10;
                if (isIE(11))
                    return 11;

                return -1;
            }
        })(Browser || (Browser = {}));

        if (Browser.isIE() && Browser.ieVersion() <= 9) {
            alert("Your browser is IE" + Browser.ieVersion() + ", please use a higher version.");
        }
    </script>
}

<div id="layout">
    <div class="panel">
        <div class="container-fluid">
            <div class="row">
                <div style="width: 22.22%; float: left;">
                    <div style="border: 1px solid #ddd; height: 200px;">
                        <div class="span span-default">
                            <div class="panel-body">
                                <div id="report_menu">
                                    <script type="text/jsx">
                                        var ReportSelect = React.createClass({
                                            getInitialState: function() {
                                                return {reportProfiles: [], reportProflieId: ""};
                                            },
                                            componentDidMount: function() {
                                                var url = "@Url.Action("GetReports")";
                                                var datas = [];
                                        
                                                $.ajax({
                                                    async: false,
                                                    method: "POST",
                                                    url: url,
                                                    dataType: "json"
                                                }).done(function(data){
                                                    if(data.status === "success") {
                                                        datas = data.reportProfiles;
                                                    }
                                                });
                                        
                                                this.setState({reportProfiles: datas});
                                            },
                                            componentWillUpdate: function(nextProps, nextState){
                                                var url = "@Url.Action("GetFields")";
                                                var value = nextState.reportProflieId;
                                                var reportField = new ReportField("report_field");
                                                if (value !== "") {
                                                    $.post(url, { reportProflieId: value }, function (data) {
                                                        if (data.status === "success") {
                                                            var fields = data.fileds;
                                                            reportField.generateFields(fields);
                                                        }
                                                    }).fail(function () {
                                                        alert("Get report information failure.");
                                                    });
                                                } else {
                                                    reportField.destoryFields();
                                                }
                                                
                                                var reportCondition = new ReportTransfer();
                                                reportCondition.destoryConditions();
                                        
                                                var report = new ReportTable();
                                                report.destoryTable();
                                            },
                                            handleChange: function(event) {
                                                var value = event.target.value;
                                                this.setState({reportProflieId: value});
                                            },
                                            render: function() {
                                                var options = [];
                                                options.push(<option value="">-----</option>);
                                                this.state.reportProfiles.forEach(function(reportProfile){
                                                    options.push(
                                                        <option value={reportProfile.ID} data-report-id={reportProfile.ReportId}>{reportProfile.Name}</option>
                                                    );
                                                });
                                                
                                                return (<select id="reportList" data-report-option="table" onChange={this.handleChange}>{options}</select>);
                                            }
                                        });
                                        
                                        ReactDOM.render(
                                            <ReportSelect />,
                                            document.getElementById('report_menu')
                                        );
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div style="width: 77.77%; float: left;">
                    <div style="border: 1px solid #ddd; height: 200px; overflow-y: auto;">
                        <div class="span span-default">
                            <div class="panel-body">
                                <div id="report_condition">
                                    <div id="reportcondition">
                                    </div>
                                    <div class="text-right">
                                        <button type="button" class="btn btn-primary btn-xs" onclick=" search(); ">Search</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div style="width: 22.22%; float: left;">
                    <div style="border: 1px solid #ddd; height: 400px; overflow-y: auto;">
                        <div class="span span-default">
                            <div class="panel-body">
                                <div id="report_field">
                                    <div>
                                        <input type="checkbox" id="checkAll" onclick=" toggleCheckAllField(this); "/>
                                        <label for="checkAll">SelectAll</label>
                                    </div>
                                    <hr/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div style="width: 77.77%; float: left;">
                    <div style="border: 1px solid #ddd; height: 400px; overflow-y: auto;">
                        <div class="span span-default">
                            <div class="panel-body">
                                <div class="ibox">
                                    <div class="ibox-title">
                                        <div class="ibox-tools rboor">
                                            <a href="@Url.Action("Index", "Subscriber")" class="btn btn-primary btn-xs" target="_blank"
                                               data-subscribe-url="@Url.Action("UserSubscribeStore", "Subscriber")"
                                               onclick=" return doSubscribe(this); ">
                                                <span class="glyphicon glyphicon-link"></span> Subscribe
                                            </a>
                                            <a href="@Url.Action("ExportExcel")" data-download-url="@Url.Action("SaveExcel")" class="btn btn-primary btn-xs" target="_blank"
                                               onclick=" return doExportExcel(this); ">
                                                <span class="glyphicon glyphicon-download-alt"></span> Export Excel
                                            </a>
                                        </div>
                                    </div>
                                    <div class="ibox-content">
                                        <div id="report_table">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
